@model Store.Web.ViewModels.PCViewModel

@{
    ViewBag.Title = "Create";
}

<h2 class="text-center">Create New PC</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4 class="text-danger">@ViewBag.ErrorMessage</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CustomerName,"Customer Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MotherboardId, "Motherboard", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MotherboardId", null,"", htmlAttributes: new {@class = "form-control",required=""})
                @Html.ValidationMessageFor(model => model.MotherboardId, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CPUId, "CPU", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownList("CPUId", null,"", htmlAttributes: new {@class = "form-control", required = "" })
                @Html.ValidationMessageFor(model => model.CPUId, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
           
             @Html.LabelFor(model => model.PCMemories, "Memories", htmlAttributes: new {@class = "control-label col-md-2"})
            <label class="col-sm-2">Memory Type</label><label class="col-sm-2">Count</label>
            
            <div class="col-md-10">
                @Html.EditorFor(model => model.SelectedMemories)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PowerSupplyId, "Power Supply", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownList("PowerSupplyId", null,"", htmlAttributes: new {@class = "form-control", required = "" })
                @Html.ValidationMessageFor(model => model.PowerSupplyId, "", new {@class = "text-danger"})
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.AssemblyNeeded, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.AssemblyNeeded)
                    @Html.ValidationMessageFor(model => model.AssemblyNeeded, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {

    <script type="text/javascript">
        $(function () {
            $("form .check-box").change(function () {
                if($(this).is(":checked"))
                    $(this).parent().parent().find("input[type='number']").val(1);
                else
                    $(this).parent().parent().find("input[type='number']").val(0);
            });
        
        })
       
    </script>
}
