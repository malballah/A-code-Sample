@model Truck.ViewModels.ResetPasswordViewModel
@{
    Layout = null;
}

<!DOCTYPE html>

<html >
<head>
    <meta name="viewport" content="width=device-width" />
    @Styles.Render("~/css/main")
    <title>Reset Password</title>
    <style>
        .login-bg {
            background: url(/assets/img/bgs/13.jpg) no-repeat center center fixed;
            filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src='/assets/img/bgs/13.jpg', sizingMethod='scale');
            -ms-filter: "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='/assets/img/bgs/13.jpg', sizingMethod='scale')";
            -webkit-background-size: cover;
            -moz-background-size: cover;
            -o-background-size: cover;
            background-size: cover;
        }

    </style>
</head>
<body class="login-bg">
    <div class="container-fluid" style="padding:100px">
        @{
            ViewBag.Title = "Reset password";
        }

        <h2>@ViewBag.Title.</h2>

        @using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            if (Model?.FirstLogin == 1)
            {
                <h4>It is is first time to login, you have to reset your password.</h4>
            }
            else
            {
                <h4>Reset your password.</h4>
            }

            <hr />
            @Html.ValidationSummary("", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Code)
            @Html.HiddenFor(model => model.UserId)
            @Html.HiddenFor(model => model.Email)
            @*<div class="form-group">
                @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                </div>
            </div>*@
            <div class="form-group">
                @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" class="btn btn-default" value="Reset" />
                </div>
            </div>
        }
    </div>

    @Scripts.Render("~/bundles/jquery")

    @Scripts.Render("~/bundles/jqueryval")

</body>
</html>
